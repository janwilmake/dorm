{
  "openapi": "3.0.3",
  "info": {
    "title": "DORM Database API",
    "description": "API for interacting with DORM (Durable Object Relational Mapper) SQLite databases",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "{basePath}",
      "description": "DORM API server",
      "variables": {
        "basePath": {
          "default": "/db",
          "description": "Base path for DORM API including the prefix"
        }
      }
    }
  ],
  "paths": {
    "/query/raw": {
      "post": {
        "summary": "Execute raw SQL query",
        "description": "Execute a raw SQL query with optional parameters",
        "operationId": "execRawSql",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["sql"],
                "properties": {
                  "sql": {
                    "type": "string",
                    "description": "SQL query to execute",
                    "example": "SELECT * FROM users WHERE age > ?"
                  },
                  "params": {
                    "type": "array",
                    "description": "Query parameters",
                    "items": {
                      "oneOf": [
                        { "type": "string" },
                        { "type": "number" },
                        { "type": "boolean" },
                        { "type": "null" }
                      ]
                    },
                    "example": [18]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Column names in the result set"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {}
                      },
                      "description": "Result rows"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "rows_read": {
                          "type": "integer",
                          "description": "Number of rows read by the query"
                        },
                        "rows_written": {
                          "type": "integer",
                          "description": "Number of rows written by the query"
                        }
                      }
                    }
                  }
                }
              },
              "application/x-ndjson": {
                "schema": {
                  "type": "string",
                  "$ref": "#/components/schemas/StreamResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Missing SQL query"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/query/raw/{sqlQuery}": {
      "get": {
        "summary": "Execute raw SQL query via GET",
        "description": "Execute a raw SQL query with optional parameters using a GET request",
        "operationId": "execRawSqlGet",
        "parameters": [
          {
            "name": "sqlQuery",
            "in": "path",
            "required": true,
            "description": "URL-encoded SQL query to execute",
            "schema": {
              "type": "string"
            },
            "example": "SELECT%20*%20FROM%20users"
          },
          {
            "name": "params",
            "in": "query",
            "required": false,
            "description": "Query parameters (can be provided multiple times)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "example": ["18"]
          }
        ],
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Column names in the result set"
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {}
                      },
                      "description": "Result rows"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "rows_read": {
                          "type": "integer",
                          "description": "Number of rows read by the query"
                        },
                        "rows_written": {
                          "type": "integer",
                          "description": "Number of rows written by the query"
                        }
                      }
                    }
                  }
                }
              },
              "application/x-ndjson": {
                "schema": {
                  "type": "string",
                  "description": "Newline-delimited JSON stream of query results"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "StreamRecord": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["columns"],
                "description": "Indicates this record contains column names"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of column names"
              }
            },
            "required": ["type", "data"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["row"],
                "description": "Indicates this record contains a single row of data"
              },
              "data": {
                "type": "array",
                "items": {},
                "description": "Array of values in the row"
              }
            },
            "required": ["type", "data"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["meta"],
                "description": "Indicates this record contains metadata about the query"
              },
              "data": {
                "type": "object",
                "properties": {
                  "rows_read": {
                    "type": "integer",
                    "description": "Number of rows read by the query"
                  },
                  "rows_written": {
                    "type": "integer",
                    "description": "Number of rows written by the query"
                  }
                },
                "required": ["rows_read", "rows_written"]
              }
            },
            "required": ["type", "data"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["error"],
                "description": "Indicates an error occurred during streaming"
              },
              "error": {
                "type": "string",
                "description": "Error message"
              }
            },
            "required": ["type", "error"]
          }
        ]
      },
      "StreamResponse": {
        "type": "string",
        "description": "Newline-delimited JSON stream where each line is a StreamRecord",
        "example": "{\"type\":\"columns\",\"data\":[\"id\",\"name\",\"age\"]}\n{\"type\":\"row\",\"data\":[1,\"John\",30]}\n{\"type\":\"row\",\"data\":[2,\"Alice\",25]}\n{\"type\":\"meta\",\"data\":{\"rows_read\":2,\"rows_written\":0}}"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication using the secret configured in middleware options"
      }
    }
  }
}
